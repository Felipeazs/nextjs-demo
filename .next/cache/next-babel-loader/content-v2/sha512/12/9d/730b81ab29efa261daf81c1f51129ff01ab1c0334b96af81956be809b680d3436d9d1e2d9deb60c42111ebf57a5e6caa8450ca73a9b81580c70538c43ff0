{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/felipezapatasoto/Academind/ReactJs/next.js/06-onwards-to-a-bigger-project-starting-project/pages/index.jsx\";\nimport React, { Fragment } from 'react';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'Next.js project',\n  image: 'https://files2.soniccdn.com/files/2022/01/13/Private%20Stock%20Orianthi%20Limited%20Edition%202.jpeg',\n  address: 'Santiago de Chile, 1234',\n  description: 'Primer Next.js project'\n}, {\n  id: 'm2',\n  title: 'Next.js project',\n  image: 'https://files2.soniccdn.com/files/2022/01/13/Private%20Stock%20Orianthi%20Limited%20Edition%202.jpeg',\n  address: 'Santiago de Chile, 1234',\n  description: 'Segundo Next.js project'\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}; //export const getServerSideProps = async (context) => {\n// fetch data from api\n// No revalidate needed. The page its regenerated for every upcoming requests,\n// but its slower for pages that don't change constantly\n//   const req = context.req\n//   const res = context.res\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   }\n// }\n\n\nexport const getStaticProps = async () => {\n  //fetch data from api\n  //runs only in server-side\n  const client = await MongoClient.connect('mongodb+srv://felipez:v6Lk7hpriRdaU4@academind.kpncuhg.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10 //re-generate every 10 seconds (data update)\n\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["/Users/felipezapatasoto/Academind/ReactJs/next.js/06-onwards-to-a-bigger-project-starting-project/pages/index.jsx"],"names":["React","Fragment","MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,sGAJJ;AAKEC,EAAAA,OAAO,EAAE,yBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,sGAJJ;AAKEC,EAAAA,OAAO,EAAE,yBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND,C,CAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AACA;AAEA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,wGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADkB;AAEhCE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFgB;AAGhCD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHkB;AAIhCF,QAAAA,EAAE,EAAEkB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE,EATP,CASW;;AATX,GAAP;AAWD,CA1BM;AA4BP,eAAehB,QAAf","sourcesContent":["import React, { Fragment } from 'react'\n\nimport { MongoClient } from 'mongodb'\n\nimport MeetupList from '../components/meetups/MeetupList'\n\nconst DUMMY_MEETUPS = [\n  {\n    id: 'm1',\n    title: 'Next.js project',\n    image:\n      'https://files2.soniccdn.com/files/2022/01/13/Private%20Stock%20Orianthi%20Limited%20Edition%202.jpeg',\n    address: 'Santiago de Chile, 1234',\n    description: 'Primer Next.js project',\n  },\n  {\n    id: 'm2',\n    title: 'Next.js project',\n    image:\n      'https://files2.soniccdn.com/files/2022/01/13/Private%20Stock%20Orianthi%20Limited%20Edition%202.jpeg',\n    address: 'Santiago de Chile, 1234',\n    description: 'Segundo Next.js project',\n  },\n]\n\nconst HomePage = (props) => {\n  return (\n    <Fragment>\n      <MeetupList meetups={props.meetups} />\n    </Fragment>\n  )\n}\n\n//export const getServerSideProps = async (context) => {\n// fetch data from api\n// No revalidate needed. The page its regenerated for every upcoming requests,\n// but its slower for pages that don't change constantly\n//   const req = context.req\n//   const res = context.res\n\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   }\n// }\n\nexport const getStaticProps = async () => {\n  //fetch data from api\n  //runs only in server-side\n\n  const client = await MongoClient.connect(\n    'mongodb+srv://felipez:v6Lk7hpriRdaU4@academind.kpncuhg.mongodb.net/meetups?retryWrites=true&w=majority',\n  )\n  const db = client.db()\n\n  const meetupsCollection = db.collection('meetups')\n\n  const meetups = await meetupsCollection.find().toArray()\n\n  client.close()\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 10, //re-generate every 10 seconds (data update)\n  }\n}\n\nexport default HomePage\n"]},"metadata":{},"sourceType":"module"}