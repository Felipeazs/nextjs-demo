{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/felipezapatasoto/Academind/ReactJs/next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetup-id]/index.jsx\",\n    _this = this;\n\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/felipezapatasoto/Academind/ReactJs/next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetup-id]/index.jsx"],"names":["React","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACK;AAJrB;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;KAAMN,a;;AAuDN,eAAeA,aAAf","sourcesContent":["import React from 'react'\n\nimport { MongoClient } from 'mongodb'\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\n\nconst MeetupDetails = (props) => {\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.description}\n    />\n  )\n}\n\nexport const getStaticPaths = async () => {\n  //Pre-generate must popular routes (ex. articles in blogs)\n\n  const client = await MongoClient.connect(\n    'mongodb+srv://felipez:v6Lk7hpriRdaU4@academind.kpncuhg.mongodb.net/meetups?retryWrites=true&w=majority',\n  )\n  const db = client.db()\n\n  const meetupsCollection = db.collection('meetups')\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray()\n\n  client.close()\n\n  return {\n    fallback: false, //true if every page needs to be pre-generated dynamically\n    paths: meetups.map((meetup) => ({\n      params: { ['meetup-id']: meetup._id.toString() },\n    })),\n  }\n}\n\nexport const getStaticProps = async (context) => {\n  // get url params outside the component\n  const meetupId = context.params['meetup-id']\n\n  const client = await MongoClient.connect(\n    'mongodb+srv://felipez:v6Lk7hpriRdaU4@academind.kpncuhg.mongodb.net/meetups?retryWrites=true&w=majority',\n  )\n  const db = client.db()\n\n  const meetupsCollection = db.collection('meetups')\n\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId })\n\n  client.close()\n\n  return {\n    props: {\n      meetupData: selectedMeetup,\n    },\n  }\n}\n\nexport default MeetupDetails\n"]},"metadata":{},"sourceType":"module"}