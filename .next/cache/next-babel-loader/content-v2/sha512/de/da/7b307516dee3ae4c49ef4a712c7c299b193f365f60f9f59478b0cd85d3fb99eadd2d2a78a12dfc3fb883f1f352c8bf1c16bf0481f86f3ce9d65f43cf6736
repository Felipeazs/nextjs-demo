{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/felipezapatasoto/Academind/ReactJs/next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetup-id]/index.jsx\";\nimport React from 'react';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  //Pre-generate must popular routes (ex. articles in blogs)\n  // fetch meeupts for pre-generate\n  const client = await MongoClient.connect('mongodb+srv://felipez:v6Lk7hpriRdaU4@academind.kpncuhg.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    //true if every page needs to be pre-generated dynamically\n    paths: meetups.map(meetup => ({\n      params: {\n        ['meetup-id']: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  // get url params outside the component\n  const meetupId = context.params['meetup-id']; // fetch one meeupt for display in details\n\n  const client = await MongoClient.connect('mongodb+srv://felipez:v6Lk7hpriRdaU4@academind.kpncuhg.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/felipezapatasoto/Academind/ReactJs/next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetup-id]/index.jsx"],"names":["React","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","toString","getStaticProps","context","meetupId","selectedMeetup","findOne","meetupData","id","title","address","image","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;AAUA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AACA;AAEA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,wGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AACY;AACjBC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAE,SAAC,WAAD,GAAeD,MAAM,CAACN,GAAP,CAAWQ,QAAX;AAAjB;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CArBM;AAuBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C;AACA,QAAMC,QAAQ,GAAGD,OAAO,CAACH,MAAR,CAAe,WAAf,CAAjB,CAF+C,CAI/C;;AACA,QAAMd,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,wGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACrDb,IAAAA,GAAG,EAAEZ,QAAQ,CAACuB,QAAD;AADwC,GAA1B,CAA7B;AAIAlB,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLuB,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAEH,cAAc,CAACZ,GAAf,CAAmBQ,QAAnB,EADM;AAEVQ,QAAAA,KAAK,EAAEJ,cAAc,CAACI,KAFZ;AAGVC,QAAAA,OAAO,EAAEL,cAAc,CAACK,OAHd;AAIVC,QAAAA,KAAK,EAAEN,cAAc,CAACM,KAJZ;AAKVC,QAAAA,WAAW,EAAEP,cAAc,CAACO;AALlB;AADP;AADF,GAAP;AAWD,CA7BM;AA+BP,eAAe7B,aAAf","sourcesContent":["import React from 'react'\n\nimport { MongoClient, ObjectId } from 'mongodb'\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\n\nconst MeetupDetails = (props) => {\n  return (\n    <Fragment>\n      <Head></Head>\n    </Fragment>\n\n    \n  )\n}\n\nexport const getStaticPaths = async () => {\n  //Pre-generate must popular routes (ex. articles in blogs)\n  // fetch meeupts for pre-generate\n\n  const client = await MongoClient.connect(\n    'mongodb+srv://felipez:v6Lk7hpriRdaU4@academind.kpncuhg.mongodb.net/meetups?retryWrites=true&w=majority',\n  )\n  const db = client.db()\n\n  const meetupsCollection = db.collection('meetups')\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray()\n\n  client.close()\n\n  return {\n    fallback: false, //true if every page needs to be pre-generated dynamically\n    paths: meetups.map((meetup) => ({\n      params: { ['meetup-id']: meetup._id.toString() },\n    })),\n  }\n}\n\nexport const getStaticProps = async (context) => {\n  // get url params outside the component\n  const meetupId = context.params['meetup-id']\n\n  // fetch one meeupt for display in details\n  const client = await MongoClient.connect(\n    'mongodb+srv://felipez:v6Lk7hpriRdaU4@academind.kpncuhg.mongodb.net/meetups?retryWrites=true&w=majority',\n  )\n  const db = client.db()\n\n  const meetupsCollection = db.collection('meetups')\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  })\n\n  client.close()\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n      },\n    },\n  }\n}\n\nexport default MeetupDetails\n"]},"metadata":{},"sourceType":"module"}